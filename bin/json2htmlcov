#!/usr/bin/env node

// https://github.com/metaskills/mocha-phantomjs/issues/10
var jade = require('jade');
var fs = require('fs');

// Strings for code coverage classes
function coverageClass(n) {
  if (n >= 75) return 'high';
  if (n >= 50) return 'medium';
  if (n >= 25) return 'low';
  return 'terrible';
}

// Read in templates
var file = __dirname + '/templates/coverage.jade';
fs.readFile(file, 'utf8', function(err, str) {
    if (err) {
        process.exit(1);
    }

    var fn = jade.compile(str, { filename: file });

    var cov = '';

    process.stdin.setEncoding('utf8');

    process.stdin.on('readable', function() {
        var chunk = process.stdin.read();
        if (chunk !== null) {
            cov += chunk;
        }
    });

    process.stdin.on('end', function() {
        cov = JSON.parse(cov);

        process.stdout.write(fn({
            cov: cov,
            coverageClass: coverageClass
        }));
    });
});
